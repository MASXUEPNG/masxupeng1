{"name":"Masxupeng1","tagline":"python 循环优化的小技巧","body":"学习Python有一段时间了,关于循环优化自己有一些认识,在此与大家分享之。个人总体感觉Python是一门非常优美的语言——精炼、高效和通俗易懂。编程时，大家应尽量遵守这些原则，这样写出的code才能被大家广泛分享和传阅。接下来，我将概括一些循环优化的注意事项，然后在此基础上给出一个案列分析。如有不足，欢迎大家批评指正与补充。\r\n\r\n**第一条：能少用for循环的，尽量少用for循环，应广泛采用Python内置循环函数进行遍历。**主要原因在于，Python内置循环函数均采用C语言编写，而C语言则有利于提升程序运行速度。\r\n\r\n**第二条：熟知列表、集合和字典的解析表达式，同时多利用生成器表达式进行遍历。**列表、集合和字典的解析表达式美观、高效、易懂，在某些场合，他们完全可以替代for循环。如果大家不太关注循环对象中的个体元素，那生成器表达式将是一个非常不错的选择，因为它更加省时与高效。\r\n\r\n**第三条：自定义函数中尽量少用global变量，多用local变量 。**因为local变量在自身函数中，调用起来显得省时省力。\r\n\r\n**第四条：脚本程序中尽量给带有“.”的函数重新赋值。**这个看起来比较难理解，不过从下面的例子中（对比eg2和eg1），我们会记住这个结论。\r\n\r\nimport time\r\n\r\noldlist = xrange(100000)\r\n\r\n**eg1普通for循环**\r\n\r\nt1 = time.clock()\r\n\r\nnewlist = []\r\n\r\nfor num in oldlist:\r\n\r\n    newlist.append(abs(num))\r\n\r\nt2 = time.clock()\r\n\r\nprint t2 - t1\r\n\r\n**eg2普通for循环 + 带有”.”函数的重新赋值**\r\n\r\nt1 = time.clock()\r\n\r\nnewlist = []\r\n\r\nappend = newlist.append\r\n\r\nfor num in oldlist:\r\n\r\n    append(abs(num))\r\n\r\nt2 = time.clock()\r\n\r\nprint t2 - t1\r\n\r\n**eg3新建一个函数，把global变量转为local变量**\r\n\r\nt1 = time.clock()\r\n\r\ndef func():\r\n\r\n    newlist = []\r\n\r\n    append = newlist.append\r\n\r\n    for num in oldlist:\r\n\r\n        append(abs(num))\r\n\r\n    return append\r\n\r\nfunc()\r\n\r\nt2 = time.clock()\r\n\r\nprint t2 - t1\r\n\r\n**eg4 内置映射函数map来进行遍历**\r\n\r\nt1 = time.clock()\r\n\r\nnewlist = map(lambda x: abs(x), oldlist)\r\n\r\nt2 = time.clock()\r\n\r\nprint t2 - t1\r\n\r\n**eg5 列表解析表达式来进行遍历**\r\n\r\nt1 = time.clock()\r\n\r\nnewlist = [abs(num) for num in oldlist]\r\n\r\nt2 = time.clock()\r\n\r\nprint t2 - t1\r\n\r\n**eg6 生成器表达式来进行遍历**\r\n\r\nt1 = time.clock()\r\n\r\nnewlist = (abs(num) for num in oldlist)\r\n\r\nt2 = time.clock()\r\n\r\nprint t2 - t1\r\n\r\n**eg1-eg6运行时间如下**\r\n\r\n0.0173954096106\r\n\r\n0.0132144560415\r\n\r\n0.00851393015088\r\n\r\n0.0126621699072\r\n\r\n0.012650303132\r\n\r\n0.000517327255834\r\n\r\n从以上案列结果中，我们不仅可以看到普通for循环的臃长与低效，同时也注意到生成器表达式的间接和高效；此外也意识到到，在大数据统计分析时，循环优化的重要性。\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}